<div data-toggle-picker class="theme-selector">
  <span class="sr-only">Toggle theme helpers</span>
  <ul class="theme-list flex gap-1 flex-center">
    <li class="light">
      <button data-toggle-theme="light">
        <svg viewBox="0 0 16 16" stroke-linejoin="round">
          <g clip-path="url(#a)">
            <path
              fill="currentColor"
              fill-rule="evenodd"
              d="M13.81 13.5c.429-.453.805-.956 1.12-1.5H1.07a8.028 8.028 0 0 0 1.12 1.5h11.62ZM15.938 9a7.946 7.946 0 0 1-.52 2H.582a7.947 7.947 0 0 1-.52-2h15.876ZM16 8.064V8A8 8 0 1 0 0 8h16v.064ZM3.335 14.5A7.964 7.964 0 0 0 8 16c1.74 0 3.352-.556 4.665-1.5h-9.33Z"
              clip-rule="evenodd"></path>
          </g>
          <defs>
            <clipPath id="a">
              <path fill="var(--ds-background-100)" d="M0 0h16v16H0z"></path>
            </clipPath>
          </defs>
        </svg>
      </button>
    </li>

    <li class="dark">
      <button data-toggle-theme="dark">
        <svg viewBox="0 0 16 16" stroke-linejoin="round"
          ><path
            fill="currentColor"
            fill-rule="evenodd"
            d="M1.5 8c0-2.47 1.492-4.59 3.623-5.511a7 7 0 0 0 7.072 9.247A6 6 0 0 1 1.5 8ZM6.417.578A7.502 7.502 0 0 0 7.5 15.5a7.502 7.502 0 0 0 6.88-4.508l-.921-1.012A5.5 5.5 0 0 1 7.15 1.732L6.417.578ZM13.25 1v1.75H15v1.5h-1.75V6h-1.5V4.25H10v-1.5h1.75V1h1.5Z"
            clip-rule="evenodd"></path>
        </svg>
      </button>
    </li>
    <li class="js">
      <button data-toggle-theme="js">
        <svg viewBox="0 0 16 16" stroke-linejoin="round"
          ><path
            fill="currentColor"
            fill-rule="evenodd"
            d="M0 2.5A2.5 2.5 0 0 1 2.5 0h11A2.5 2.5 0 0 1 16 2.5v11a2.5 2.5 0 0 1-2.5 2.5h-11A2.5 2.5 0 0 1 0 13.5v-11ZM7.5 8v4.125a.375.375 0 0 1-.75 0v-.375h-1.5v.375a1.875 1.875 0 0 0 3.75 0V8H7.5Zm4.25 1.875c0-.207.168-.375.375-.375H13.5V8h-1.375a1.875 1.875 0 0 0 0 3.75.375.375 0 0 1 0 .75H10.5V14h1.625a1.875 1.875 0 0 0 0-3.75.375.375 0 0 1-.375-.375Z"
            clip-rule="evenodd"></path>
        </svg>
      </button>
    </li>
  </ul>
</div>

<style>
  svg {
    color: var(--text);
    width: 16px;
    height: auto;
  }
  ul {
    list-style: none;
    padding: 0;
    margin: 0;
    background: var(--faded-bg);
    line-height: 1;
    padding: var(--radius) calc(var(--radius) * 2);
    border-radius: var(--radius);
    align-items: center;
    justify-content: center;
  }
  li {
    display: flex;
  }

  button {
    background: none;
    border: none;
    cursor: pointer;
    padding: 0;
  }

  button:hover {
    opacity: 0.8;
  }
</style>

<script lang="ts" is:inline>
  function setTheme(theme) {
    const themeBtns = document.querySelectorAll("[data-toggle-theme]");
    if (!themeBtns) return;
    // remove all the data-theme attributes
    themeBtns.forEach((btn) => {
      btn.removeAttribute("data-toggle-theme-active");
    });

    // find the button with the selected theme and add the data-theme attribute
    const selected = document.querySelector(`[data-toggle-theme="${theme}"]`);
    selected?.setAttribute("data-toggle-theme-active", "selected");
  }
  function switchTheme() {
    const themes = ["light", "dark", "js"];

    const key = "v-for";
    const themeBtns = document.querySelectorAll("[data-toggle-theme]");
    const doc = document.documentElement;

    const store = (selected) => {
      doc.setAttribute("data-theme", selected);
      localStorage.setItem(key, selected);
    };

    const fromLocal = localStorage.getItem(key) ?? themes[0];

    const dark = window.matchMedia("(darkers-color-scheme: dark)").matches;
    const light = window.matchMedia("(darkers-color-scheme: light)").matches;

    if (!fromLocal && dark) {
      store("dark");
    } else if (!fromLocal && light) {
      store("light");
    } else if (fromLocal) {
      store(fromLocal);
      setTheme(fromLocal);
    }

    if (themeBtns) {
      themeBtns.forEach((btn) => {
        btn.addEventListener("click", (e) => {
          e.preventDefault();
          const selected = btn.getAttribute("data-toggle-theme");
          store(selected);
          setTheme(selected);
        });
      });
    }
  }

  (function run() {
    switchTheme();
  })();

  document.addEventListener("astro:page-load", () => {
    switchTheme();
  });
</script>
